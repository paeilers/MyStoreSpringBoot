<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7079" started-at="2015-09-22T17:23:51Z" finished-at="2015-09-22T17:23:58Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7079" started-at="2015-09-22T17:23:51Z" finished-at="2015-09-22T17:23:58Z">
      <class name="mystore.SalesOrderServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="16" started-at="2015-09-22T11:23:51Z" finished-at="2015-09-22T11:23:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6501" started-at="2015-09-22T11:23:51Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-09-22T11:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:57Z" finished-at="2015-09-22T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.getSalesOrderService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="getSalesOrderService()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="getSalesOrderService" duration-ms="16" started-at="2015-09-22T11:23:57Z" finished-at="2015-09-22T11:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSalesOrderService -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2015-09-22T11:23:57Z" finished-at="2015-09-22T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.getSalesOrderService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:57Z" finished-at="2015-09-22T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testCreateSalesOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreateSalesOrder()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="testCreateSalesOrder" duration-ms="297" started-at="2015-09-22T11:23:57Z" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSalesOrder -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.getCatalogService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="getCatalogService()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="getCatalogService" duration-ms="16" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCatalogService -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testCreateSalesOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="cancelSalesOrder()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="cancelSalesOrder" duration-ms="62" started-at="2015-09-22T11:23:58Z" depends-on-methods="mystore.SalesOrderServiceTest.testCreateSalesOrder" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelSalesOrder -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.cancelSalesOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.getCatalogService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testAddLineItem() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.cancelSalesOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testAddLineItem()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="testAddLineItem" duration-ms="47" started-at="2015-09-22T11:23:58Z" depends-on-methods="mystore.SalesOrderServiceTest.testCreateSalesOrder" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLineItem -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testAddLineItem() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testRetrieveSalesOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRetrieveSalesOrder()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="testRetrieveSalesOrder" duration-ms="16" started-at="2015-09-22T11:23:58Z" depends-on-methods="mystore.SalesOrderServiceTest.testCreateSalesOrder" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveSalesOrder -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testRemoveLineItem() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRemoveLineItem()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="testRemoveLineItem" duration-ms="62" started-at="2015-09-22T11:23:58Z" depends-on-methods="mystore.SalesOrderServiceTest.testAddLineItem" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLineItem -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testRetrieveSalesOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mystore.SalesOrderServiceTest@544a2ea6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-09-22T11:23:58Z" finished-at="2015-09-22T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mystore.SalesOrderServiceTest.testRemoveLineItem() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- mystore.SalesOrderServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
